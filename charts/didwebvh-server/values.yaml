---
nameOverride: "didwebvh-server"
fullnameOverride: "didwebvh-server"

selectorLabels: {}

ingress:
  tls: []
  labels: []
  annotations: []

networkPolicy:
  ingress:
    namespaceSelector: []

server:
  image:
    repository: ghcr.io/decentralized-identity/didwebvh-server-py
    tag: 0.3.1
    pullPolicy: IfNotPresent
    pullSecrets: []

  host: example.com

  workers: 4

  # Policies should be configured according to governance decisions
  policies:
    webvh_version: "1.0"
    webvh_witness: "true"
    webvh_watcher: ""
    webvh_prerotation: "true"
    webvh_portability: "true"
    webvh_endorsement: "true"

  replicaCount: 1

  podAnnotations: {}
  podSecurityContext: {}
  containerSecurityContext: {}

  service:
    type: ClusterIP
    apiPort: 8000
    servicePort: 8000

  networkPolicy:
    ingress:
      podSelector: {}

postgresql:
  enabled: true
  fullnameOverride: "didwebvh-server-postgresql"
  nameOverride: "didwebvh-server-postgresql"
  architecture: standalone
  auth:
    enablePostgresUser: true
    existingSecret: ""
    secretKeys:
      adminPasswordKey: admin-password
      userPasswordKey: database-password
    username: "didwebvh-server"

  ## PostgreSQL Primary parameters
  primary:
    persistence:
      enabled: true
      size: 1Gi
    containerSecurityContext:
      enabled: false
    podSecurityContext:
      enabled: false
    service:
      ports:
        postgresql: 5432
    extendedConfiguration: |
      max_connections = 500

  networkPolicy:
    ingress:
      podSelector: {}
