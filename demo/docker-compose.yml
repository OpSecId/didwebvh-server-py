---
services:
  webvh-server:
    build:
      context: ../server
      dockerfile: Dockerfile
    ports:
      - "${WEBVH_PORT:-8000}:8000"
    environment:
      DOMAIN: ${WEBVH_DOMAIN:-did.observer}
      WEBVH_WITNESS: ${WEBVH_WITNESS:-false}
      WEBVH_PREROTATION: ${WEBVH_PREROTATION:-false}
      WEBVH_PORTABILITY: ${WEBVH_PORTABILITY:-false}
      WEBVH_ENDORSEMENT: ${WEBVH_ENDORSEMENT:-false}
      APP_PORT: 8000
      API_KEY: ${API_KEY:-webvh}
    healthcheck:
      test: ["CMD-SHELL", "python3 -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000/server/status\")' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - webvh-network

  # acapy-agent:
  #   image: ghcr.io/openwallet-foundation/acapy-plugins/webvh-plugin:latest
  #   ports:
  #     - "${ACAPY_ADMIN_PORT:-8020}:8020"
  #     - "${ACAPY_INBOUND_PORT:-8021}:8021"
  #   command: >
  #     start
  #       --label "WebVH Controller Agent"
  #       --inbound-transport http 0.0.0.0 8021
  #       --outbound-transport http
  #       --endpoint http://acapy-agent:8021
  #       --admin 0.0.0.0 8020
  #       --admin-insecure-mode
  #       --no-ledger
  #       --wallet-type askar-anoncreds
  #       --wallet-name webvh-controller
  #       --wallet-key ${ACAPY_WALLET_KEY:-insecure-dev-key}
  #       --auto-provision
  #       --log-level ${ACAPY_LOG_LEVEL:-info}
  #       --plugin webvh
  #       --plugin-config-value webvh.witness=false
  #       --plugin-config-value webvh.server_url=http://webvh-server:8000
  #       --auto-accept-invites
  #       --auto-respond-messages
  #   environment:
  #     ACAPY_WALLET_SEED: ${ACAPY_WALLET_SEED:-00000000000000000000000000000001}
  #   healthcheck:
  #     test: ["CMD-SHELL", "wget --spider -q http://localhost:8020/status || exit 1"]
  #     interval: 5s
  #     timeout: 3s
  #     retries: 10
  #     start_period: 15s
  #   networks:
  #     - webvh-network
  #   depends_on:
  #     webvh-server:
  #       condition: service_healthy
  
  # Optional: Production deployment with ngrok (comment out for local dev)
  # ngrok:
  #   image: ngrok/ngrok:latest
  #   command: ["http", "webvh-server:8000", "--domain=${WEBVH_DOMAIN}"]
  #   environment:
  #     NGROK_AUTHTOKEN: ${NGROK_TOKEN}
  #   networks:
  #     - webvh-network
  #   depends_on:
  #     webvh-server:
  #       condition: service_healthy
  
  # Optional: Demo provisioning script
  # demo_script:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.script
  #   environment:
  #     WATCHER_URL: ${WATCHER_URL}
  #     WATCHER_API_KEY: ${WATCHER_API_KEY}
  #     WEBVH_SERVER_URL: http://webvh-server:8000
  #     AGENT_ADMIN_API_URL: http://witness-agent:8020
  #   networks:
  #     - webvh-network
  #   depends_on:
  #     webvh-server:
  #       condition: service_healthy

networks:
  webvh-network:
    driver: bridge